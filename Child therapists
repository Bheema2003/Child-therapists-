import cv2
import torch
import numpy as np
from sort import Sort  

model = torch.hub.load('ultralytics/yolov5', 'yolov5s', pretrained=True)

tracker = Sort()

video_path = "path_to_your_video.mp4"  # viedo path hako edrali
cap = cv2.VideoCapture(video_path)

class_names = model.names

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    results = model(frame)

    detections = results.xyxy[0].cpu().numpy()

    dets = []
    for *xyxy, conf, cls in detections:
        if conf > 0.5:  
            x1, y1, x2, y2 = map(int, xyxy)
            dets.append([x1, y1, x2, y2, conf])

    dets = np.array(dets)

    tracks = tracker.update(dets)

    for track in tracks:
        x1, y1, x2, y2, track_id = map(int, track[:5])

        cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)

        cv2.putText(frame, f"ID: {track_id}", (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

    cv2.imshow("Frame", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
